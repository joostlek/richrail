package nl.hu.richrail.application.cli;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import java.awt.Color;
import java.awt.Insets;

public class ApplicationCliForm {
    private JPanel containerView;
    private JTextPane textOverview;
    private JTextPane textLog;
    private JTextField commandText;
    private JButton buttonExecute;
    private JPanel drawPanel;
    private JPanel commandPanel;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        containerView = new JPanel();
        containerView.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setDividerLocation(250);
        splitPane1.setOrientation(0);
        containerView.add(splitPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        drawPanel = new JPanel();
        drawPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        drawPanel.setBackground(new Color(-13158601));
        drawPanel.setEnabled(true);
        splitPane1.setLeftComponent(drawPanel);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
        splitPane1.setRightComponent(panel1);
        commandPanel = new JPanel();
        commandPanel.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow"));
        panel1.add(commandPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Commando");
        CellConstraints cc = new CellConstraints();
        commandPanel.add(label1, cc.xy(1, 1));
        commandText = new JTextField();
        commandPanel.add(commandText, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        buttonExecute = new JButton();
        buttonExecute.setText("Uitvoeren");
        commandPanel.add(buttonExecute, cc.xy(5, 1));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(0, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textLog = new JTextPane();
        textLog.setBackground(new Color(-16777216));
        textLog.setEditable(false);
        textLog.setForeground(new Color(-1));
        scrollPane1.setViewportView(textLog);
        final JScrollPane scrollPane2 = new JScrollPane();
        panel1.add(scrollPane2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textOverview = new JTextPane();
        textOverview.setEditable(false);
        scrollPane2.setViewportView(textOverview);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return containerView;
    }

    public JTextPane getTextOverview() {
        return textOverview;
    }

    public JTextPane getTextLog() {
        return textLog;
    }

    public JPanel getCommandPanel() {
        return commandPanel;
    }

    public JTextField getCommandText() {
        return commandText;
    }

    public JButton getButtonExecute() {
        return buttonExecute;
    }

}
